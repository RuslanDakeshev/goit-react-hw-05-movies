{"version":3,"file":"static/js/341.704add74.chunk.js","mappings":"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","sources":["pages/MoviePage/MoviePage.styled.jsx","pages/MoviePage/MoviePage.jsx","hooks/useFetchEvent.js","services/eventsApi.js"],"sourcesContent":["import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom';\n\nexport const Button = styled.button`\n  display: inline-block;\n  margin-bottom: 20px;\n  padding: 8px 14px;\n  font-weight: 500;\n  font-size: 18px;\n  border-radius: 4px;\n  border: none;\n  color: var(--accent);\n  background-color: #ebf5fc;\n  box-shadow: -2px -2px 5px #ffffff, 3px 3px 5px rgba(0, 0, 0, 0.1);;\n  transition: all 200ms ease-in-out;\n  cursor: pointer;\n  :hover,\n  :focus-visible {\n    color: #ebf5fc;\n    background-color: #6a9bd8;\n  }\n  :focus {\n    outline: 3px solid #ebf5fc;\n    box-shadow: 0px 0px 0px 6px #6a9bd8;\n  }\n`;\n\nexport const Container = styled.div`\n  margin: 20px 0;\n  display: flex;\n  gap: 10px;\n  \n`;\n\nexport const Img = styled.img`\n  border-radius: 4px;\n  box-shadow: var(--main-shadow);\n  \n`;\n\nexport const Wrapper = styled.div``;\n\nexport const Title = styled.h2`\n  margin-bottom: 45px;\n  font-weight: 700;\n  font-size: 36px;\n  color: #6a9bd8;\n  text-shadow: var(--main-shadow);\n`;\n\nexport const Year = styled.span`\n  font-weight: 200;\n  color: var(--secondary);\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 15px;\n  font-size: 22px;\n  font-weight: 500;\n  color: var(--accent);\n`;\n\n\n\nexport const Text = styled.span`\n  font-weight: 300;\n  letter-spacing: 0.05em;\n  color: var(--secondary);\n`;\n\nexport const AddInfo = styled(NavLink)`\n  display: inline-block;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  padding: 8px 14px;\n  font-weight: 500;\n  font-size: 18px;\n  border-radius: 4px;\n  border: none;\n  color: var(--accent);\n  background-color: var(--bg);\n  box-shadow: -2px -2px 5px #ffffff, 3px 3px 5px rgba(0, 0, 0, 0.1);;\n  transition: all 200ms ease-in-out;\n  cursor: pointer;\n  :hover,\n  :focus-visible {\n    color: #ebf5fc;\n    background-color: #6a9bd8;\n  }\n  :focus {\n    outline: 3px solid #ebf5fc;\n    box-shadow: 0px 0px 0px 6px #6a9bd8;\n  }\n`;","import { useFetchEvent } from 'hooks/useFetchEvent';\nimport {\n  Button,\n  Container,\n  Img,\n  Title,\n  Wrapper,\n  Year,\n  Description,\n  Text,\n  AddInfo,\n} from './MoviePage.styled';\n\nimport { useNavigate, useLocation,Outlet } from 'react-router-dom';\n\nexport const MoviePage = () => {\n  const movie = useFetchEvent();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const getImgUrl = image => {\n    if (image === null) {\n      return 'https://img.icons8.com/pastel-glyph/512/film-reel--v2.png';\n    }\n    return `https://image.tmdb.org/t/p/w300${image}`;\n  };\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          navigate(location?.state?.from ?? '/');\n        }}\n      >\n        Go back\n      </Button>\n      {movie && (\n        <Container>\n          <Img\n            src={getImgUrl(movie.poster_path)}\n            alt={movie.title}\n            width={350}\n          />\n          <Wrapper>\n            <Title>\n              {movie.title} <Year>({movie.release_date.slice(0, 4)})</Year>\n            </Title>\n            <Description>\n              User score: <Text>{movie.vote_average.toFixed(1)}</Text>\n            </Description>\n            <Description>\n              Genres:{' '}\n              <Text>{movie.genres.map(genre => genre.name).join(', ')}</Text>\n            </Description>\n            <Description>\n              Overview: <Text>{movie.overview}</Text>\n            </Description>\n\n            <AddInfo to={'cast'} state={location.state}>\n              Cast\n            </AddInfo>\n            <AddInfo to={'reviews'} state={location.state}>\n              Reviews\n            </AddInfo>\n          </Wrapper>\n        </Container>\n      )}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviePage;","import { useEffect, useState} from \"react\";\nimport { fetchEventById } from \"services/eventsApi\";\nimport { useParams } from \"react-router-dom\";\n\nexport const useFetchEvent = () => {\n    const [movieDetails, setMovieDetails] = useState(null);\n    const { movieId } = useParams()\n    \n    \n\n    // useEffect(() => {\n    //   const loadMovieData = async () => {\n    //     const data = await fetchEventById(movieId);\n    //     return data;\n    //   };\n    //   if (doOneFetch.current === null) {\n    //     loadMovieData().then(setMovieDetails);\n    //     doOneFetch.current = 1;\n    //   }\n    // }, [movieId]);\n\n\n    useEffect(() => {\n        fetchEventById(movieId).then(setMovieDetails)\n    }, [movieId]);\n\n     return movieDetails\n    \n    \n\n   \n}","import axios from 'axios';\n\nconst KEY = '5c79cb68282b6d2568848c7dc97d0ef0';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport async function fetchEvents() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: KEY,\n      size: 20,\n    },\n  });\n  return response.data.results;\n}\n\n//пзапрос полной информации о фильме для страницы кинофильма.\n\nexport async function fetchEventById(movie_id) {\n  const { data } = await axios(`movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n      id: movie_id,\n    },\n  });\n  return data;\n}\n\n//поиск кинофильма по ключевому слову на странице фильмов.\n\nexport async function fetchEventsByName(keyword, page) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: KEY,\n      page,\n      query: keyword,\n    },\n  });\n  return response.data.results;\n}\n\n//запрос информации о актёрском составе для страницы кинофильма.\n\nexport async function fetchEventsByCredits(movie_id) {\n  const response = await axios(`movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n      id: movie_id,\n    },\n  });\n  return response.data.cast;\n}\n\n//запрос обзоров для страницы кинофильма.\n\nexport async function fetchEventsByReviews(movie_id) {\n  const response = await axios(`movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n      id: movie_id,\n    },\n  });\n  return response.data.results;\n}\n"],"names":["Button","styled","Container","Img","Wrapper","Title","Year","Description","Text","AddInfo","NavLink","MoviePage","image","movie","useState","movieDetails","setMovieDetails","movieId","useParams","useEffect","fetchEventById","then","useFetchEvent","navigate","useNavigate","location","useLocation","onClick","state","from","src","poster_path","alt","title","width","release_date","slice","vote_average","toFixed","genres","map","genre","name","join","overview","to","KEY","fetchEvents","axios","params","api_key","size","response","data","results","movie_id","id","fetchEventsByName","keyword","page","query","fetchEventsByCredits","cast","fetchEventsByReviews"],"sourceRoot":""}