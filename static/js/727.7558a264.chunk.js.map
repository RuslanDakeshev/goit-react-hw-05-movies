{"version":3,"file":"static/js/727.7558a264.chunk.js","mappings":"sRAIaA,EAAOC,EAAAA,GAAAA,GAAH,wMAYJC,EAAMD,EAAAA,GAAAA,IAAH,wEAMHE,EAAOF,EAAAA,GAAAA,EAAH,oEAKJG,EAAYH,EAAAA,GAAAA,EAAH,iD,SCxBTI,EAAY,SAAC,GAAgC,IACtCC,EADQC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAOtC,OACE,+BACE,UAACT,EAAD,YACE,SAACE,EAAD,CAAKQ,KATOJ,EASQG,EARV,OAAVH,EACK,gEAEH,kCAAN,OAAyCA,IAKJK,IAAKJ,EAAMK,MAAM,SAClD,SAACT,EAAD,UAAOI,KACP,SAACH,EAAD,UAAYI,QAInB,ECjBYK,EAAOZ,EAAAA,GAAAA,GAAH,gFCIJa,EAAY,WACvB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBH,GAASI,KAAKL,EACpC,GAAE,CAACC,IAECF,EAML,OACE,gCACsB,IAAnBA,EAAQO,SACP,uEAEDP,IACC,SAACH,EAAD,UACGG,EAAQQ,KAAI,SAAAC,GACX,OACE,SAACpB,EAAD,CACEqB,KAAG,EAAChB,IAtBA,mCAsBgBiB,OAAOF,EAAOG,cAAejB,IAAKc,EAAOlB,KAAMK,MAAM,MAEzEL,KAAMkB,EAAOlB,KACbC,KAAMiB,EAAOI,UACbpB,WAAYgB,EAAOG,cAHdH,EAAOK,UAMjB,QAKV,EAED,G,+LC5CMC,EAAM,mCAIL,SAAeC,IAAtB,+B,aAAO,O,oBAAA,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,EACTK,KAAM,MAJL,cACCC,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEAYA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,0FACkBR,EAAAA,EAAAA,GAAM,SAAD,OAAUQ,GAAY,CAChDP,OAAQ,CACNC,QAASJ,EACTW,GAAID,KAJH,uBACGH,EADH,EACGA,KADH,kBAOEA,GAPF,kEAYA,SAAeK,EAAtB,oC,aAAO,O,oBAAA,WAAiCC,EAASC,GAA1C,wFACkBZ,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTc,KAAAA,EACAC,MAAOF,KALN,cACCP,EADD,yBAQEA,EAASC,KAAKC,SARhB,kEAaA,SAAelB,EAAtB,kC,aAAO,O,oBAAA,WAAoCoB,GAApC,wFACkBR,EAAAA,EAAAA,GAAM,SAAD,OAAUQ,EAAV,YAA8B,CACxDP,OAAQ,CACNC,QAASJ,EACTW,GAAID,KAJH,cACCJ,EADD,yBAOEA,EAASC,KAAKS,MAPhB,kEAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAoCP,GAApC,wFACkBR,EAAAA,EAAAA,GAAM,SAAD,OAAUQ,EAAV,YAA8B,CACxDP,OAAQ,CACNC,QAASJ,EACTW,GAAID,KAJH,cACCJ,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEApDPN,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/ActorCard/ActorCard.styled.jsx","components/ActorCard/ActorCard.jsx","components/MovieCast/MovieCast.styled.jsx","components/MovieCast/MovieCast.jsx","services/eventsApi.js"],"sourcesContent":["import styled from 'styled-components';\n\n\n\nexport const Item = styled.li`\n width: 220px;\n  margin: 0 auto;\n  padding: 30px 0;\n  text-align: center;\n  background-color: var(--bg);\n  box-shadow: var(--main-shadow);\n  margin-bottom:20px;\n  \n  \n`;\n\nexport const Img = styled.img`\n\n  margin-bottom: 5px;\n  border-radius: 4px;\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 5px;\n  font-weight: 500;\n`;\n\nexport const Character = styled.p`\n  color: var(--accent);\n`;","import { Img, Name, Character, Item } from \"./ActorCard.styled\";\nimport PropTypes from 'prop-types';\n\nexport const ActorCard = ({ name, role, photo_path }) => {\n  const getImgUrl = image => {\n    if (image === null) {\n      return 'https://img.icons8.com/ios-filled/512/gender-neutral-user.png';\n    }\n    return `https://image.tmdb.org/t/p/w200${image}`;\n  };\n  return (\n    <>\n      <Item>\n        <Img src={getImgUrl(photo_path)} alt={name} width=\"200\" />\n        <Name>{name}</Name>\n        <Character>{role}</Character>\n      </Item>\n    </>\n  );\n};\n\nActorCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  role: PropTypes.string,\n  photo_path: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  \n`;","import { useState, useEffect } from 'react';\nimport { fetchEventsByCredits } from 'services/eventsApi';\nimport { useParams } from 'react-router-dom';\nimport { ActorCard } from 'components/ActorCard/ActorCard';\nimport { List } from './MovieCast.styled';\n\nexport const MovieCast = () => {\n  const [credits, setCredits] = useState(null);\n  const { movieId } = useParams();\n  // const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    fetchEventsByCredits(movieId).then(setCredits);\n  }, [movieId]);\n\n  if (!credits) {\n    return;\n  }\n\n  \n\n  return (\n    <>\n      {credits.length === 0 && (\n        <p>Sorry, we don't have any cast on this movie</p>\n      )}\n      {credits && (\n        <List>\n          {credits.map(credit => {\n            return (\n              <ActorCard\n                img src={imgBaseUrl.concat(credit.profile_path)} alt={credit.name} width=\"200\"\n                key={credit.credit_id}\n                name={credit.name}\n                role={credit.character}\n                photo_path={credit.profile_path}\n              />\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default MovieCast;\n","import axios from 'axios';\n\nconst KEY = '5c79cb68282b6d2568848c7dc97d0ef0';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport async function fetchEvents() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: KEY,\n      size: 20,\n    },\n  });\n  return response.data.results;\n}\n\n//пзапрос полной информации о фильме для страницы кинофильма.\n\nexport async function fetchEventById(movie_id) {\n  const { data } = await axios(`movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n      id: movie_id,\n    },\n  });\n  return data;\n}\n\n//поиск кинофильма по ключевому слову на странице фильмов.\n\nexport async function fetchEventsByName(keyword, page) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: KEY,\n      page,\n      query: keyword,\n    },\n  });\n  return response.data.results;\n}\n\n//запрос информации о актёрском составе для страницы кинофильма.\n\nexport async function fetchEventsByCredits(movie_id) {\n  const response = await axios(`movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n      id: movie_id,\n    },\n  });\n  return response.data.cast;\n}\n\n//запрос обзоров для страницы кинофильма.\n\nexport async function fetchEventsByReviews(movie_id) {\n  const response = await axios(`movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n      id: movie_id,\n    },\n  });\n  return response.data.results;\n}\n"],"names":["Item","styled","Img","Name","Character","ActorCard","image","name","role","photo_path","src","alt","width","List","MovieCast","useState","credits","setCredits","movieId","useParams","useEffect","fetchEventsByCredits","then","length","map","credit","img","concat","profile_path","character","credit_id","KEY","fetchEvents","axios","params","api_key","size","response","data","results","fetchEventById","movie_id","id","fetchEventsByName","keyword","page","query","cast","fetchEventsByReviews"],"sourceRoot":""}